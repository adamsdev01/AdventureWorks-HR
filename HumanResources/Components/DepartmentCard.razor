<h3 style="text-align:center">DEPARTMENTS</h3>

<br />
<TelerikGrid @ref="@GridRef"
             TItem="Department"
             OnRead="@ReadItems">
    <GridColumns>
        <GridColumn Visible="false" Field="@nameof(departmentObj.DepartmentId)" Id="@DepartmentId" />
        <GridColumn Field="@nameof(departmentObj.RowIndex)" Title="#" Width="8px" />
        <GridColumn Field="@nameof(departmentObj.Name)" Title="Team" Width="100px" />
        <GridColumn Field="@nameof(departmentObj.GroupName)" Title="Department Name" Width="100px">
            <Template>
                @{
                    var dept = context as Department;
                                   
                    if (dept.GroupName == "Executive General and Administration")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-primary k-rounded-lg">Executive General and Administration</span>
                    }
                    if (dept.GroupName == "Inventory Management")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-warning k-rounded-lg">Inventory Management</span>
                    }
                    if (dept.GroupName == "Manufacturing")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-info k-rounded-lg">Manufacturing</span>
                    }
                    if (dept.GroupName == "Quality Assurance")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-secondary k-rounded-lg">Quality Assurance</span>
                    }
                    if (dept.GroupName == "Research and Development")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-error k-rounded-lg">Research and Development</span>
                    }
                    if (dept.GroupName == "Sales and Marketing")
                    {
                        <span class="k-badge k-badge-lg k-badge-solid k-badge-solid-success k-rounded-lg">Sales and Marketing</span>
                    }
                }
            </Template>
        </GridColumn>
    </GridColumns>
</TelerikGrid>

@code {

    [Parameter]
    public string? DepartmentId { get; set; }

    public Department departmentObj = new Department();

    public List<Department>? GridData { get; set; }

    public List<Department>? SourceData { get; set; }

    public TelerikGrid<Department>? GridRef { get; set; }


    protected override void OnInitialized()
    {
        LoadData();
    }

    private void LoadData()
    {
        SourceData = new List<Department>();
        GridData = new List<Department>(SourceData);
    }

    protected async Task ReadItems(GridReadEventArgs args)
    {
        DataSourceResult result = await service.ReadDepartmentsByQueryArg(args.Request);

        // start row index setup
        List<Department> iteratableData = result.Data.Cast<Department>().ToList();
        for (int i = 0; i < iteratableData.Count; i++)
        {
            iteratableData[i].RowIndex = i + 1; // we add one for human readabale 1-based index
        }
        result.Data = iteratableData;
        // end row index setup

        var data = new DataEnvelope<Department>
        {
            CurrentPageData = result.Data.OfType<Department>().ToList(),
            TotalItemCount = result.Total
        };

        args.Data = data.CurrentPageData;
        args.Total = data.TotalItemCount;
    }

}
